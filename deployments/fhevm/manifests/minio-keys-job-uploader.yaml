apiVersion: batch/v1
kind: Job
metadata:
  name: minio-keys-uploader
  namespace: fhevm
spec:
  template:
    spec:
      # # Temporarily used to simulate KMS
      # # this is a hack to copy files from local filesystem to pvc
      # # POD=$(kubectl get pod -n fhevm -l job-name=minio-keys-uploader -o jsonpath='{.items[0].metadata.name}')
      # kubectl cp PublicKey/408d8cbaa51dece7f782fe04ba0b1c1d017b10880c538b7c72037468fe5c97ee fhevm/$POD:/keys/PublicKey/408d8cbaa51dece7f782fe04ba0b1c1d017b10880c538b7c72037468fe5c97ee -c init-keys
      # kubectl cp ServerKey/408d8cbaa51dece7f782fe04ba0b1c1d017b10880c538b7c72037468fe5c97ee fhevm/$POD:/keys/ServerKey/408d8cbaa51dece7f782fe04ba0b1c1d017b10880c538b7c72037468fe5c97ee -c init-keys
      # kubectl cp SnsKey/408d8cbaa51dece7f782fe04ba0b1c1d017b10880c538b7c72037468fe5c97ee fhevm/$POD:/keys/SnsKey/408d8cbaa51dece7f782fe04ba0b1c1d017b10880c538b7c72037468fe5c97ee -c init-keys
      # kubectl cp CRS/a5fedad3fd734a598fb67452099229445cb68447198fb56f29bb64d98953d002 fhevm/$POD:/keys/CRS/a5fedad3fd734a598fb67452099229445cb68447198fb56f29bb64d98953d002 -c init-keys
      # initContainers:
      # - name: init-keys
      #   image: busybox
      #   command: ['sh', '-c', 'sleep 3600']
      #   volumeMounts:
      #   - name: keys-storage
      #     mountPath: /keys
      containers:
      - name: keys-uploader
        image: debian:stable-slim
        command: ["/bin/bash", "-c"]
        args:
          - |
            set -e
            apt update && apt install -y wget

            MINIO_URL="http://minio:9000"
            AWS_ACCESS_KEY_ID="fhevm-access-key"
            AWS_SECRET_ACCESS_KEY="fhevm-access-secret-key"
            BUCKET_NAME="kms-public"
            PATHS=(PublicKey ServerKey SnsKey CRS)
            FILES_DIR="/keys"
            IDS=(408d8cbaa51dece7f782fe04ba0b1c1d017b10880c538b7c72037468fe5c97ee 408d8cbaa51dece7f782fe04ba0b1c1d017b10880c538b7c72037468fe5c97ee 408d8cbaa51dece7f782fe04ba0b1c1d017b10880c538b7c72037468fe5c97ee a5fedad3fd734a598fb67452099229445cb68447198fb56f29bb64d98953d002)

            wget https://dl.min.io/client/mc/release/linux-amd64/mc -O /usr/local/bin/mc
            chmod +x /usr/local/bin/mc

            mc alias set minio "$MINIO_URL" "$AWS_ACCESS_KEY_ID" "$AWS_SECRET_ACCESS_KEY"

            for i in "${!IDS[@]}"; do
              id="${IDS[$i]}"
              path="${PATHS[$i]}"
              file="${FILES_DIR}/${path}/${id}"
              if [ ! -f $file ]; then
                echo "Error: File $file not found"
                exit 1
              fi
              
              DEST_PATH="minio/${BUCKET_NAME}/kms/PUB/${path}/${id}"
               # Copy with file preservation and checksum
              if ! mc cp \
                --attr "Content-Type=application/octet-stream" \
                --preserve \
                --checksum SHA256 \
                "$file" \
                "$DEST_PATH"; then
                echo "Error: Failed to upload $file"
                exit 1
              fi
              
              # Verify upload
              if ! mc ls "$DEST_PATH"; then
                echo "Error: Failed to verify upload"
                exit 1
              fi
              
              echo "Successfully uploaded $file to $DEST_PATH"
            done 
        volumeMounts:
        - name: keys-storage
          mountPath: /keys
      restartPolicy: Never
      volumes:
      - name: keys-storage
        persistentVolumeClaim:
          claimName: keys-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: keys-pvc
  namespace: fhevm
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
