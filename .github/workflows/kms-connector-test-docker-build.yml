# Main workflow for KMS Core that handles testing and build
# Triggers:
# 1. Pull requests: For validation before merging
# 2. Pushes: On main and release/* branches for building images
# IMPORTANT NOTES: The tests are only executed for components that have been changed
name: kms-connector-test-docker-build

on:
  pull_request:
  push:
    branches: ['main', 'release/*']

# Controls concurrent workflow runs:
# - Groups runs by git ref
# - Cancels in-progress runs for non-main/release branches
concurrency:
  group: kms-connector-test-docker-build-${{ github.ref }}
  cancel-in-progress: ${{ !contains(fromJSON('["release/", "main"]'),github.ref) }}

# Required permissions for workflow execution
permissions:
  actions: 'write'
  contents: 'write'
  id-token: 'write'
  pull-requests: 'write'
  pages: 'write'
  packages: 'write'
  attestations: 'write'


jobs:
  # Initial job that determines which components have changed
  # Used by subsequent jobs to decide whether they need to run
  check-changes:
    name: kms-connector-test-docker-build/check-changes
    runs-on: ubuntu-latest
    outputs:
      # Each output indicates if files in a specific component were modified
      changes-connector: ${{ steps.filter.outputs.connector }}
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        persist-credentials: 'false'
    - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36  # v3.0.2
      id: filter
      with:
        # Define paths that trigger specific component workflows
        # Changes to conf-trace affect multiple components
        filters: |
          connector:
            - '.github/workflows/kms-connector-*'
            - 'kms-connector/config/**'
            - 'kms-connector/connector-db/**'
            - 'kms-connector/crates/**'
            - 'kms-connector/simple-connector/**'
            - 'kms-connector/Cargo.toml'
            - 'kms-connector/Dockerfile'


  ############################################################################
  # KMS Connector Pipeline
  # Testing triggered by:
  # - Changes to kms-connector/**
  # - Changes to conf-trace/**
  # - Changes to core/grpc/**
  # - Changes to workflow file
  ############################################################################
  test-connector:
    name: kms-connector-test-docker-build/test-connector
    needs: check-changes
    if: needs.check-changes.outputs.changes-connector == 'true'
    uses: ./.github/workflows/kms-connector-common-testing-big-instance.yml
    with:
      working-directory: './kms-connector'
      package-name: 'kms-connector'
      app-cache-dir: 'kms-connector'
    secrets:
      BLOCKCHAIN_ACTIONS_TOKEN: ${{ secrets.BLOCKCHAIN_ACTIONS_TOKEN }}
      SLAB_ACTION_TOKEN: ${{ secrets.SLAB_ACTION_TOKEN }}
      SLAB_BASE_URL: ${{ secrets.SLAB_BASE_URL }}
      JOB_SECRET: ${{ secrets.JOB_SECRET }}
      AWS_ACCESS_KEY_S3_USER: ${{ secrets.AWS_ACCESS_KEY_S3_USER }}
      AWS_SECRET_KEY_S3_USER: ${{ secrets.AWS_SECRET_KEY_S3_USER }}

  # Builds Docker image for connector
  # Only runs on main/release branches after successful tests
  # Also runs on pull requests targeting main/release branches with the docker label
  docker-connector:
    name: kms-connector-test-docker-build/docker-connector
    needs:
      - test-connector
    if: >-
      (startsWith(github.ref, 'refs/heads/release/') || github.ref == 'refs/heads/main') ||
      (github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'docker'))
    uses: ./.github/workflows/kms-connector-common-docker-big-instance.yml
    with:
      docker-file: './kms-connector/Dockerfile'
      working-directory: './kms-connector'
      push_image: true
      image-name: 'fhevm/kms-connector'
      app-cache-dir: 'kms-connector'
    secrets:
      BLOCKCHAIN_ACTIONS_TOKEN: ${{ secrets.BLOCKCHAIN_ACTIONS_TOKEN }}
      SLAB_ACTION_TOKEN: ${{ secrets.SLAB_ACTION_TOKEN }}
      SLAB_BASE_URL: ${{ secrets.SLAB_BASE_URL }}
      JOB_SECRET: ${{ secrets.JOB_SECRET }}
      AWS_ACCESS_KEY_S3_USER: ${{ secrets.AWS_ACCESS_KEY_S3_USER }}
      AWS_SECRET_KEY_S3_USER: ${{ secrets.AWS_SECRET_KEY_S3_USER }}
