# =============================================================================
# FHEVM Coprocessor Configuration
# =============================================================================
# This chart deploys the FHEVM coprocessor components including:
# - Configuration setup
# - Database migration
# - Host listener (blockchain event processing)
# - Gateway listener (gateway event processing)
# - TFHE worker (FHE computation)
# - ZK proof worker (zero-knowledge proof generation)
# - SNS worker (notification service)
# - Transaction sender (blockchain transaction submission)
# =============================================================================

# -----------------------------------------------------------------------------
# Configuration Setup
# -----------------------------------------------------------------------------
# Initializes secrets and configuration required by other components
config:
  enabled: true

  image:
    name: ghcr.io/zama-ai/kube-utils
    tag: 0.1.0

  # Coprocessor cryptographic key configuration
  # TODO: this should be deprecated, to be confirmed
  coprocessorKey:
    secret:
      name: coprocessor-key
      key: coprocessor.hex

  # API key for tenant authentication
  apiKey:
    secret:
      name: coprocessor-api-key
      key: coprocessor-api-key

  # Database connection configuration
  database:
    secret:
      name: coprocessor-db-url
      key: coprocessor-db-url
      value: "postgresql://postgres:postgres@postgresql:5432/coprocessor"

  # Helm hook annotations for deployment ordering
  annotations:
    # "helm.sh/hook": "pre-install"
    # "helm.sh/hook-weight": "-1"

  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 500m
      memory: 512Mi

# -----------------------------------------------------------------------------
# Database Migration
# -----------------------------------------------------------------------------
# Sets up the database schema and initial data
dbMigration:
  enabled: true

  # Helm hook annotations for deployment ordering
  annotations:
    # "helm.sh/hook": "pre-install, pre-upgrade"
    # "helm.sh/hook-weight": "0"
    # "helm.sh/hook-needs": "config-setup"

  image:
    name: ghcr.io/zama-ai/fhevm-db-migration
    tag: v0.9.0

  # Environment variables for migration process
  env:
    - name: CHAIN_ID
      value: "12345"
    - name: DATABASE_URL
      valueFrom:
        secretKeyRef:
          name: coprocessor-db-url
          key: coprocessor-db-url
    - name: TENANT_API_KEY
      valueFrom:
        secretKeyRef:
          name: coprocessor-api-key
          key: coprocessor-api-key
    # KMS public key URLs for cryptographic setup
    - name: PKS_URL
      value: "http://minio:9000/kms-public/kms/PUB/PublicKey/d74037feb1394aec0eb724afc4a690e16a0203eb1dc868de08179f2e4828f335"
    - name: SKS_URL
      value: "http://minio:9000/kms-public/kms/PUB/ServerKey/812b602c11693dda4bfa68db78269849972b6f1920a725a98fc78cf619a6ab5f"
    - name: PP_URL
      value: "http://minio:9000/kms-public/kms/PUB/CRS/e4e3f0deef6492bde2fac3f2c698112ace878d4a3656b272197ed332391c48fa"

  serviceAccountName:

  # Persistent volume for migration data
  storage:
    size: 2Gi

  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 500m
      memory: 512Mi

  affinity:
    enabled: false

  tolerations:
    enabled: false
    items: []

# -----------------------------------------------------------------------------
# Host Listener
# -----------------------------------------------------------------------------
# Processes blockchain events from the host chain
hostListener:
  enabled: false
  nameOverride:

  image:
    name: ghcr.io/zama-ai/fhevm-coprocessor
    tag: v0.9.0

  replicas: 1

  # Environment variables
  env:
    - name: DATABASE_URL
      valueFrom:
        secretKeyRef:
          name: coprocessor-db-url
          key: coprocessor-db-url
    - name: TENANT_API_KEY
      valueFrom:
        secretKeyRef:
          name: coprocessor-api-key
          key: coprocessor-api-key

  # Command line arguments for the host listener
  args:
    - --database-url=$(DATABASE_URL)
    - --coprocessor-api-key=$(TENANT_API_KEY)
    - --url=$(ETHEREUM_RPC_URL)
    - --acl-contract-address=$(ACL_CONTRACT_ADDRESS)
    - --tfhe-contract-address=$(FHEVM_EXECUTOR_CONTRACT_ADDRESS)
    - --initial-block-time=12  # it can switch to real blockTime when data is available
    - --log-level=INFO
    - --health-port=8080
    - --dependence-cache-size=128
    - --reorg-maximum-duration-in-blocks=50
    ### Catchup parameters (optional)
    # - --catchup-margin
    # - --catchup-paging
    # - --start-at-block # To be used to catch up from a specific block
    # - --end-at-block   # To be used to stop at a specific block

  # Service ports configuration
  ports:
    metrics: 9100
    healthcheck: 8080

  serviceMonitor:
    enabled: false

  serviceAccountName:

  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 500m
      memory: 512Mi

  # Health check probes
  probes:
    liveness:
      enabled: false
      httpGet:
        path: /liveness
        port: healthcheck
      initialDelaySeconds: 10
      periodSeconds: 10
    readiness:
      enabled: false
      httpGet:
        path: /healthz
        port: healthcheck
      initialDelaySeconds: 5
      periodSeconds: 10

  affinity:
    enabled: false

  tolerations:
    enabled: false
    items: []

  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0

# -----------------------------------------------------------------------------
# Gateway Listener
# -----------------------------------------------------------------------------
# Processes events from the gateway chain
gwListener:
  enabled: false
  nameOverride:

  image:
    name: ghcr.io/zama-ai/fhevm-coprocessor
    tag: v0.9.0

  replicas: 1

  env:
    # =========================================================================
    # NEW ENVIRONMENT VARIABLES
    # =========================================================================
    # The address of the KMSGeneration contract
    - name: KMS_GENERATION_ADDRESS
      value: ""

  # Command line arguments for the gateway listener
  args:
    - --database-url=$(DATABASE_URL)
    - --gw-url=ws://gateway-rpc-node:8548
    - --input-verification-address=$(INPUT_VERIFICATION_ADDRESS)
    - --verify-proof-req-database-channel="event_zkpok_new_work"
    - --database-pool-size=16
    - --error-sleep-initial-secs=1
    - --error-sleep-max-secs=10
    - --get-logs-poll-interval=1s
    - --get-logs-block-batch-size=100
    # NEW ARG: KMS generation contract address
    - --kms-generation-address=$(KMS_GENERATION_ADDRESS)

  # Service ports configuration
  ports:
    metrics: 9100
    healthcheck: 8080

  serviceMonitor:
    enabled: false

  serviceAccountName:

  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 500m
      memory: 512Mi

  # Health check probes
  probes:
    liveness:
      enabled: false
      httpGet:
        path: /liveness
        port: healthcheck
      initialDelaySeconds: 10
      periodSeconds: 10
    readiness:
      enabled: false
      httpGet:
        path: /healthz
        port: healthcheck
      initialDelaySeconds: 5
      periodSeconds: 10

  affinity:
    enabled: false

  tolerations:
    enabled: false
    items: []

  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0

# -----------------------------------------------------------------------------
# TFHE Worker
# -----------------------------------------------------------------------------
# Performs FHE (Fully Homomorphic Encryption) computations
tfheWorker:
  enabled: true
  nameOverride:

  image:
    name: ghcr.io/zama-ai/fhevm-coprocessor
    tag: v0.9.0

  replicas: 1

  # Environment variables
  env:
    - name: DATABASE_URL
      valueFrom:
        secretKeyRef:
          name: coprocessor-db-url
          key: coprocessor-db-url
    - name: TENANT_API_KEY
      valueFrom:
        secretKeyRef:
          name: coprocessor-api-key
          key: coprocessor-api-key
    - name: ACL_CONTRACT_ADDRESS
      value: "0x05fD9B5EFE0a996095f42Ed7e77c390810CF660c"
    - name: INPUT_VERIFIER_ADDRESS
      value: "0xa1880e99d86F081E8D3868A8C4732C8f65dfdB11"

  # Command line arguments for TFHE worker
  args:
    - --database-url=$(DATABASE_URL)
    - --run-bg-worker=true
    - --worker-polling-interval-ms=60000
    - --work-items-batch-size=100  # scheduling changed
    - --dependence-chains-per-batch=100
    - --tenant-key-cache-size=32
    - --coprocessor-fhe-threads=64  # scheduling changed
    - --tokio-threads=16  # scheduling changed
    - --pg-pool-max-connections=10
    - --metrics-addr=0.0.0.0:9100
    - --service-name="tfhe-worker"  # tfhe-worker service name in OTLP traces
    - --log-level=INFO
    # Should not be used (unsafe - testing only, keep 0/false values except CI)
    - --run-server=false
    - --generate-fhe-keys=false
    - --server-maximum-ciphertexts-to-schedule=0
    - --server-maximum-ciphertexts-to-get=0
    - --maximum-compact-inputs-upload=0
    - --maximum-handles-per-input=0
    - --server-addr=""
    - --coprocessor-private-key=""

  # Service ports configuration
  ports:
    metrics: 9100
    healthcheck: 8080

  serviceMonitor:
    enabled: false

  serviceAccountName:

  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 500m
      memory: 512Mi

  # Health check probes
  probes:
    liveness:
      enabled: false
      httpGet:
        path: /liveness
        port: healthcheck
      initialDelaySeconds: 10
      periodSeconds: 10
    readiness:
      enabled: false
      httpGet:
        path: /healthz
        port: healthcheck
      initialDelaySeconds: 5
      periodSeconds: 10

  # Distributed tracing configuration
  tracing:
    enabled: false
    endpoint: ""
    service: "coprocessor_server"

  affinity:
    enabled: false

  tolerations:
    enabled: false
    items: []

  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0

  # Horizontal Pod Autoscaler configuration
  hpa:
    enabled: false
    minReplicas: 1
    maxReplicas: 10
    targetCPUUtilizationPercentage: 80
    behavior:
      scaleUp:
        stabilizationWindowSeconds: 60
        selectPolicy: Max
        policies:
          - type: Percent
            value: 100
            periodSeconds: 15
          - type: Pods
            value: 2
            periodSeconds: 60
      scaleDown:
        stabilizationWindowSeconds: 300
        selectPolicy: Min
        policies:
          - type: Percent
            value: 40
            periodSeconds: 60

# -----------------------------------------------------------------------------
# ZK Proof Worker
# -----------------------------------------------------------------------------
# Generates zero-knowledge proofs for verification
zkProofWorker:
  enabled: false
  nameOverride:

  image:
    name: ghcr.io/zama-ai/fhevm-coprocessor
    tag: v0.9.0

  replicas: 1

  # Environment variables
  env:
    - name: DATABASE_URL
      valueFrom:
        secretKeyRef:
          name: coprocessor-db-url
          key: coprocessor-db-url

  # Command line arguments for ZK proof worker
  args:
    - --database-url=$(DATABASE_URL)
    - --pg-listen-channel="event_zkpok_new_work"
    - --pg-notify-channel="event_zkpok_computed"
    - --pg-polling-interval=5
    - --pg-pool-connections=5
    - --worker-thread-count=8
    - --service-name=coprocessor-zkpok-worker

  # Service ports configuration
  ports:
    metrics: 9100
    healthcheck: 8080

  serviceMonitor:
    enabled: false

  serviceAccountName:

  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 500m
      memory: 512Mi

  # Health check probes
  probes:
    liveness:
      enabled: false
      httpGet:
        path: /liveness
        port: healthcheck
      initialDelaySeconds: 10
      periodSeconds: 10
    readiness:
      enabled: false
      httpGet:
        path: /healthz
        port: healthcheck
      initialDelaySeconds: 5
      periodSeconds: 10

  affinity:
    enabled: false

  tolerations:
    enabled: false
    items: []

  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0

  # Horizontal Pod Autoscaler configuration
  hpa:
    enabled: false
    minReplicas: 1
    maxReplicas: 10
    targetCPUUtilizationPercentage: 80
    behavior:
      scaleUp:
        stabilizationWindowSeconds: 60
        selectPolicy: Max
        policies:
          - type: Percent
            value: 100
            periodSeconds: 15
          - type: Pods
            value: 2
            periodSeconds: 60
      scaleDown:
        stabilizationWindowSeconds: 300
        selectPolicy: Min
        policies:
          - type: Percent
            value: 40
            periodSeconds: 60

# -----------------------------------------------------------------------------
# SNS Worker
# -----------------------------------------------------------------------------
# Handles Simple Notification Service operations
snsWorker:
  enabled: false
  nameOverride:

  image:
    name: ghcr.io/zama-ai/fhevm-coprocessor
    tag: v0.9.0

  replicas: 1

  # Environment variables
  env:
    - name: DATABASE_URL
      valueFrom:
        secretKeyRef:
          name: coprocessor-db-url
          key: coprocessor-db-url
    - name: TENANT_API_KEY
      valueFrom:
        secretKeyRef:
          name: coprocessor-api-key
          key: coprocessor-api-key

  # Command line arguments for SNS worker
  args:
    - --database-url=$(DATABASE_URL)
    - --tenant-api-key=$(TENANT_API_KEY)
    - --pg-listen-channels
    - event_pbs_computations
    - event_ciphertext_computed
    - --pg-notify-channel
    - event_ciphertext128_computed
    - --work-items-batch-size=20
    - --pg-polling-interval=1
    - --pg-pool-connections=10
    - --bucket-name-ct64=$(S3_BUCKET_NAME)
    - --bucket-name-ct128=$(S3_BUCKET_NAME)
    - --s3-max-concurrent-uploads=100
    - --s3-max-retries-per-upload=100
    - --s3-max-backoff=10s
    - --s3-max-retries-timeout=120s
    - --s3-recheck-duration=2s
    - --s3-regular-recheck-duration=120s

  # Service ports configuration
  ports:
    metrics: 9100
    healthcheck: 8080

  serviceMonitor:
    enabled: false

  serviceAccountName:

  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 500m
      memory: 512Mi

  # Health check probes
  probes:
    liveness:
      enabled: false
      httpGet:
        path: /liveness
        port: healthcheck
      initialDelaySeconds: 10
      periodSeconds: 10
    readiness:
      enabled: false
      httpGet:
        path: /healthz
        port: healthcheck
      initialDelaySeconds: 5
      periodSeconds: 10

  affinity:
    enabled: false

  tolerations:
    enabled: false
    items: []

  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0

  # Horizontal Pod Autoscaler configuration
  hpa:
    enabled: false
    minReplicas: 1
    maxReplicas: 10
    targetCPUUtilizationPercentage: 80
    behavior:
      scaleUp:
        stabilizationWindowSeconds: 60
        selectPolicy: Max
        policies:
          - type: Percent
            value: 100
            periodSeconds: 15
          - type: Pods
            value: 2
            periodSeconds: 60
      scaleDown:
        stabilizationWindowSeconds: 300
        selectPolicy: Min
        policies:
          - type: Percent
            value: 40
            periodSeconds: 60

# -----------------------------------------------------------------------------
# Transaction Sender
# -----------------------------------------------------------------------------
# Submits transactions to the blockchain
txSender:
  enabled: false
  nameOverride:

  image:
    name: ghcr.io/zama-ai/fhevm-coprocessor
    tag: v0.9.0

  replicas: 1

  # Environment variables
  env:
    - name: DATABASE_URL
      valueFrom:
        secretKeyRef:
          name: coprocessor-db-url
          key: coprocessor-db-url
    - name: TX_SENDER_PRIVATE_KEY
      value: "0x8f82b3f482c19a95ac29c82cf048c076ed0de2530c64a73f2d2d7d1e64b5cc6e"
    - name: ZKPOK_MANAGER_ADDRESS
      valueFrom:
        configMapKeyRef:
          name: gateway-sc-addresses
          key: zkpok_manager.address
    - name: CIPHERTEXT_STORAGE_ADDRESS
      valueFrom:
        configMapKeyRef:
          name: gateway-sc-addresses
          key: fhevm.address

  # Command line arguments for transaction sender
  args:
    - --database-url=$(DATABASE_URL)
    - --gateway-url=http://gateway-anvil-node:8546
    - --private-key=$(TX_SENDER_PRIVATE_KEY)
    - --zkpok-manager-address=$(ZKPOK_MANAGER_ADDRESS)
    - --ciphertext-storage-address=$(CIPHERTEXT_STORAGE_ADDRESS)

  # Service ports configuration
  ports:
    metrics: 9100
    healthcheck: 8080

  serviceMonitor:
    enabled: false

  serviceAccountName:

  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 500m
      memory: 512Mi

  # Health check probes
  probes:
    liveness:
      enabled: false
      httpGet:
        path: /liveness
        port: healthcheck
      initialDelaySeconds: 10
      periodSeconds: 10
    readiness:
      enabled: false
      httpGet:
        path: /healthz
        port: healthcheck
      initialDelaySeconds: 5
      periodSeconds: 10

  affinity:
    enabled: false

  tolerations:
    enabled: false
    items: []

  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0

# -----------------------------------------------------------------------------
# Global Pod Configuration
# -----------------------------------------------------------------------------
# Pod annotations for additional metadata
# See: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}

# Pod labels for selection and organization
# See: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}
