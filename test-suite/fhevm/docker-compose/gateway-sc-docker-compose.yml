services:
  gateway-sc-deploy:
    container_name: gateway-sc-deploy
    image: ghcr.io/zama-ai/fhevm/gateway-contracts:${GATEWAY_VERSION}
    build:
      context: ../../../gateway-contracts
      dockerfile: Dockerfile
      cache_from:
        - type=gha
      cache_to:
        - type=gha,mode=max
    env_file:
      - ../env/staging/.env.gateway-sc.local
    command:
      - npx hardhat task:deployAllGatewayContracts
    volumes:
      - addresses-volume:/app/addresses  # workdir in gateway's Dockerfile is /app

  gateway-sc-add-network:
    container_name: gateway-sc-add-network
    image: ghcr.io/zama-ai/fhevm/gateway-contracts:${GATEWAY_VERSION}
    build:
      context: ../../../gateway-contracts
      dockerfile: Dockerfile
      cache_from:
        - type=gha
      cache_to:
        - type=gha,mode=max
    env_file:
      - ../env/staging/.env.gateway-sc.local
    command:
      - npx hardhat task:addHostChainsToGatewayConfig
    depends_on:
      gateway-sc-deploy:
        condition: service_completed_successfully
    # Addresses needs to be mounted even though we don't use them in the task because all contracts
    # are compiled, and most of them import these addresses.
    volumes:
      - addresses-volume:/app/addresses  # workdir in gateway's Dockerfile is /app

  gateway-sc-add-pausers:
    container_name: gateway-sc-add-pausers
    image: ghcr.io/zama-ai/fhevm/gateway-contracts:${GATEWAY_VERSION}
    build:
      context: ../../../gateway-contracts
      dockerfile: Dockerfile
      cache_from:
        - type=gha
      cache_to:
        - type=gha,mode=max
    env_file:
      - ../env/staging/.env.gateway-sc.local
    command:
      - npx hardhat task:addGatewayPausers
    depends_on:
      gateway-sc-add-network:
        condition: service_completed_successfully
    # Addresses needs to be mounted even though we don't use them in the task because the PauserSet
    # contract is compiled, and it imports these addresses.
    volumes:
      - addresses-volume:/app/addresses  # workdir in gateway's Dockerfile is /app

  gateway-sc-trigger-keygen:
    container_name: gateway-sc-trigger-keygen
    image: ghcr.io/zama-ai/fhevm/gateway-contracts:${GATEWAY_VERSION}
    build:
      context: ../../../gateway-contracts
      dockerfile: Dockerfile
      cache_from:
        - type=gha
      cache_to:
        - type=gha,mode=max
    env_file:
      - ../env/staging/.env.gateway-sc.local
    command:
      - npx hardhat task:triggerKeygen --params-type 1
    depends_on:
      gateway-sc-add-pausers:
        condition: service_completed_successfully
    # Addresses needs to be mounted even though we don't use them in the task because all contracts
    # are compiled, and most of them import these addresses.
    volumes:
      - addresses-volume:/app/addresses  # workdir in gateway's Dockerfile is /app

  gateway-sc-trigger-crsgen:
    container_name: gateway-sc-trigger-crsgen
    image: ghcr.io/zama-ai/fhevm/gateway-contracts:${GATEWAY_VERSION}
    build:
      context: ../../../gateway-contracts
      dockerfile: Dockerfile
      cache_from:
        - type=gha
      cache_to:
        - type=gha,mode=max
    env_file:
      - ../env/staging/.env.gateway-sc.local
    command:
      - npx hardhat task:triggerCrsgen --params-type 1 --max-bit-length 2048
    depends_on:
      gateway-sc-trigger-keygen:
        condition: service_completed_successfully
    # Addresses needs to be mounted even though we don't use them in the task because all contracts
    # are compiled, and most of them import these addresses.
    volumes:
      - addresses-volume:/app/addresses  # workdir in gateway's Dockerfile is /app

volumes:
  addresses-volume:
